
console.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000450  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000042c  20000000  00400450  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  2000042c  0040087c  0002042c  2**2
                  ALLOC
  3 .stack        00000404  2000046c  004008bc  0002042c  2**0
                  ALLOC
  4 .heap         00000200  20000870  00400cc0  0002042c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020456  2**0
                  CONTENTS, READONLY
  7 .debug_info   00000d7d  00000000  00000000  000204af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000003bf  00000000  00000000  0002122c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000ac  00000000  00000000  000215eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000000a8  00000000  00000000  00021697  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0002173f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000c9ce  00000000  00000000  000217a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00001a55  00000000  00000000  0002e175  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0003beac  00000000  00000000  0002fbca  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000002a0  00000000  00000000  0006ba78  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	70 08 00 20 3d 01 40 00 39 01 40 00 39 01 40 00     p.. =.@.9.@.9.@.
  400010:	39 01 40 00 39 01 40 00 39 01 40 00 00 00 00 00     9.@.9.@.9.@.....
	...
  40002c:	39 01 40 00 39 01 40 00 00 00 00 00 39 01 40 00     9.@.9.@.....9.@.
  40003c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40004c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40005c:	00 00 00 00 39 01 40 00 39 01 40 00 00 00 00 00     ....9.@.9.@.....
  40006c:	39 01 40 00 39 01 40 00 00 00 00 00 39 01 40 00     9.@.9.@.....9.@.
  40007c:	39 01 40 00 00 00 00 00 00 00 00 00 39 01 40 00     9.@.........9.@.
  40008c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40009c:	39 01 40 00 39 01 40 00 39 01 40 00 00 00 00 00     9.@.9.@.9.@.....
	...
  4000b4:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  4000c4:	39 01 40 00 39 01 40 00                             9.@.9.@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	2000042c 	.word	0x2000042c
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00400450 	.word	0x00400450

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00400450 	.word	0x00400450
  40012c:	20000430 	.word	0x20000430
  400130:	00400450 	.word	0x00400450
  400134:	00000000 	.word	0x00000000

00400138 <Dummy_Handler>:
  400138:	e7fe      	b.n	400138 <Dummy_Handler>
	...

0040013c <Reset_Handler>:
  40013c:	b508      	push	{r3, lr}
  40013e:	4b17      	ldr	r3, [pc, #92]	; (40019c <Reset_Handler+0x60>)
  400140:	4a17      	ldr	r2, [pc, #92]	; (4001a0 <Reset_Handler+0x64>)
  400142:	429a      	cmp	r2, r3
  400144:	d010      	beq.n	400168 <Reset_Handler+0x2c>
  400146:	4b17      	ldr	r3, [pc, #92]	; (4001a4 <Reset_Handler+0x68>)
  400148:	4a14      	ldr	r2, [pc, #80]	; (40019c <Reset_Handler+0x60>)
  40014a:	429a      	cmp	r2, r3
  40014c:	d20c      	bcs.n	400168 <Reset_Handler+0x2c>
  40014e:	3b01      	subs	r3, #1
  400150:	1a9b      	subs	r3, r3, r2
  400152:	f023 0303 	bic.w	r3, r3, #3
  400156:	3304      	adds	r3, #4
  400158:	4413      	add	r3, r2
  40015a:	4911      	ldr	r1, [pc, #68]	; (4001a0 <Reset_Handler+0x64>)
  40015c:	f851 0b04 	ldr.w	r0, [r1], #4
  400160:	f842 0b04 	str.w	r0, [r2], #4
  400164:	429a      	cmp	r2, r3
  400166:	d1f9      	bne.n	40015c <Reset_Handler+0x20>
  400168:	4b0f      	ldr	r3, [pc, #60]	; (4001a8 <Reset_Handler+0x6c>)
  40016a:	4a10      	ldr	r2, [pc, #64]	; (4001ac <Reset_Handler+0x70>)
  40016c:	429a      	cmp	r2, r3
  40016e:	d20a      	bcs.n	400186 <Reset_Handler+0x4a>
  400170:	3b01      	subs	r3, #1
  400172:	1a9b      	subs	r3, r3, r2
  400174:	f023 0303 	bic.w	r3, r3, #3
  400178:	3304      	adds	r3, #4
  40017a:	4413      	add	r3, r2
  40017c:	2100      	movs	r1, #0
  40017e:	f842 1b04 	str.w	r1, [r2], #4
  400182:	4293      	cmp	r3, r2
  400184:	d1fb      	bne.n	40017e <Reset_Handler+0x42>
  400186:	4a0a      	ldr	r2, [pc, #40]	; (4001b0 <Reset_Handler+0x74>)
  400188:	4b0a      	ldr	r3, [pc, #40]	; (4001b4 <Reset_Handler+0x78>)
  40018a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40018e:	6093      	str	r3, [r2, #8]
  400190:	4b09      	ldr	r3, [pc, #36]	; (4001b8 <Reset_Handler+0x7c>)
  400192:	4798      	blx	r3
  400194:	4b09      	ldr	r3, [pc, #36]	; (4001bc <Reset_Handler+0x80>)
  400196:	4798      	blx	r3
  400198:	e7fe      	b.n	400198 <Reset_Handler+0x5c>
  40019a:	bf00      	nop
  40019c:	20000000 	.word	0x20000000
  4001a0:	00400450 	.word	0x00400450
  4001a4:	2000042c 	.word	0x2000042c
  4001a8:	2000046c 	.word	0x2000046c
  4001ac:	2000042c 	.word	0x2000042c
  4001b0:	e000ed00 	.word	0xe000ed00
  4001b4:	00400000 	.word	0x00400000
  4001b8:	004002b9 	.word	0x004002b9
  4001bc:	004001d1 	.word	0x004001d1

004001c0 <SystemInit>:
  4001c0:	f44f 7280 	mov.w	r2, #256	; 0x100
  4001c4:	4b01      	ldr	r3, [pc, #4]	; (4001cc <SystemInit+0xc>)
  4001c6:	601a      	str	r2, [r3, #0]
  4001c8:	4770      	bx	lr
  4001ca:	bf00      	nop
  4001cc:	400e0a00 	.word	0x400e0a00

004001d0 <main>:
#include "sam4s8b.h"
#include "spi.h"

int main(void)
{
  4001d0:	b508      	push	{r3, lr}
    /* Initialize the SAM system */
    SystemInit();
  4001d2:	4b1c      	ldr	r3, [pc, #112]	; (400244 <main+0x74>)
  4001d4:	4798      	blx	r3

	while(!(REG_PMC_SR & PMC_SR_MOSCRCS));
  4001d6:	4b1c      	ldr	r3, [pc, #112]	; (400248 <main+0x78>)
  4001d8:	681a      	ldr	r2, [r3, #0]
  4001da:	f412 3f00 	tst.w	r2, #131072	; 0x20000
  4001de:	d0fb      	beq.n	4001d8 <main+0x8>
	REG_CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCF_12_MHz;
  4001e0:	4a1a      	ldr	r2, [pc, #104]	; (40024c <main+0x7c>)
  4001e2:	6813      	ldr	r3, [r2, #0]
  4001e4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4001e8:	f043 0320 	orr.w	r3, r3, #32
  4001ec:	6013      	str	r3, [r2, #0]
	while(!(REG_PMC_SR & PMC_SR_MCKRDY));
  4001ee:	4b16      	ldr	r3, [pc, #88]	; (400248 <main+0x78>)
  4001f0:	681a      	ldr	r2, [r3, #0]
  4001f2:	f012 0f08 	tst.w	r2, #8
  4001f6:	d0fb      	beq.n	4001f0 <main+0x20>
	REG_CKGR_PLLAR |= CKGR_PLLAR_DIVA(1);
  4001f8:	4b15      	ldr	r3, [pc, #84]	; (400250 <main+0x80>)
  4001fa:	681a      	ldr	r2, [r3, #0]
  4001fc:	f042 0201 	orr.w	r2, r2, #1
  400200:	601a      	str	r2, [r3, #0]
	REG_CKGR_PLLAR |= CKGR_PLLAR_MULA(9);
  400202:	681a      	ldr	r2, [r3, #0]
  400204:	f442 2210 	orr.w	r2, r2, #589824	; 0x90000
  400208:	601a      	str	r2, [r3, #0]
	while(!(REG_PMC_SR & PMC_SR_LOCKA));
  40020a:	3340      	adds	r3, #64	; 0x40
  40020c:	681a      	ldr	r2, [r3, #0]
  40020e:	f012 0f02 	tst.w	r2, #2
  400212:	d0fb      	beq.n	40020c <main+0x3c>
	REG_PMC_MCKR |= PMC_MCKR_PRES_CLK_1;
  400214:	4b0f      	ldr	r3, [pc, #60]	; (400254 <main+0x84>)
  400216:	681a      	ldr	r2, [r3, #0]
  400218:	601a      	str	r2, [r3, #0]
	while(!(REG_PMC_SR & PMC_SR_MCKRDY));
  40021a:	3338      	adds	r3, #56	; 0x38
  40021c:	681a      	ldr	r2, [r3, #0]
  40021e:	f012 0f08 	tst.w	r2, #8
  400222:	d0fb      	beq.n	40021c <main+0x4c>
	REG_PMC_MCKR |= PMC_MCKR_CSS_PLLA_CLK;
  400224:	4a0b      	ldr	r2, [pc, #44]	; (400254 <main+0x84>)
  400226:	6813      	ldr	r3, [r2, #0]
  400228:	f043 0302 	orr.w	r3, r3, #2
  40022c:	6013      	str	r3, [r2, #0]
	while(!(REG_PMC_SR & PMC_SR_MCKRDY));
  40022e:	4b06      	ldr	r3, [pc, #24]	; (400248 <main+0x78>)
  400230:	681a      	ldr	r2, [r3, #0]
  400232:	f012 0f08 	tst.w	r2, #8
  400236:	d0fb      	beq.n	400230 <main+0x60>
	
	SPI_init();
  400238:	4b07      	ldr	r3, [pc, #28]	; (400258 <main+0x88>)
  40023a:	4798      	blx	r3
	SPI_Send(0xFF);
  40023c:	20ff      	movs	r0, #255	; 0xff
  40023e:	4b07      	ldr	r3, [pc, #28]	; (40025c <main+0x8c>)
  400240:	4798      	blx	r3
  400242:	e7fe      	b.n	400242 <main+0x72>
  400244:	004001c1 	.word	0x004001c1
  400248:	400e0468 	.word	0x400e0468
  40024c:	400e0420 	.word	0x400e0420
  400250:	400e0428 	.word	0x400e0428
  400254:	400e0430 	.word	0x400e0430
  400258:	00400261 	.word	0x00400261
  40025c:	004002a9 	.word	0x004002a9

00400260 <SPI_init>:

//#include "stdint.h"
#include "spi.h"

void SPI_init(void){
	REG_PIOA_PDR |= (0x3 << 13);			//Disables the PIO from controlling the corresponding pin (enables peripheral control of the pin).
  400260:	4a0e      	ldr	r2, [pc, #56]	; (40029c <SPI_init+0x3c>)
  400262:	6813      	ldr	r3, [r2, #0]
  400264:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
  400268:	6013      	str	r3, [r2, #0]
											//Enables peripheral control on pins PA13 & PA14, MOSI & SPCK on PIOA
	REG_PIOA_OER |= (0x3 << 13);			//Enables the output on the I/O line.
  40026a:	320c      	adds	r2, #12
  40026c:	6813      	ldr	r3, [r2, #0]
  40026e:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
  400272:	6013      	str	r3, [r2, #0]
	
	
	REG_SPI_CR |= (0x1 << 0);		//Enables the SPI to transfer and receive data
  400274:	4a0a      	ldr	r2, [pc, #40]	; (4002a0 <SPI_init+0x40>)
  400276:	6813      	ldr	r3, [r2, #0]
  400278:	f043 0301 	orr.w	r3, r3, #1
  40027c:	6013      	str	r3, [r2, #0]
	REG_SPI_MR |= (0x1 << 0);		//Set SPI in Master mode
  40027e:	4b09      	ldr	r3, [pc, #36]	; (4002a4 <SPI_init+0x44>)
  400280:	681a      	ldr	r2, [r3, #0]
  400282:	f042 0201 	orr.w	r2, r2, #1
  400286:	601a      	str	r2, [r3, #0]
	
	REG_SPI_MR &= ~(0x1 << 16);
  400288:	681a      	ldr	r2, [r3, #0]
  40028a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
  40028e:	601a      	str	r2, [r3, #0]
	REG_SPI_MR |= (0xE << 16);		//Peripheral Chip Select NPCS[3:0] = 1110
  400290:	681a      	ldr	r2, [r3, #0]
  400292:	f442 2260 	orr.w	r2, r2, #917504	; 0xe0000
  400296:	601a      	str	r2, [r3, #0]
  400298:	4770      	bx	lr
  40029a:	bf00      	nop
  40029c:	400e0e04 	.word	0x400e0e04
  4002a0:	40008000 	.word	0x40008000
  4002a4:	40008004 	.word	0x40008004

004002a8 <SPI_Send>:
		
}

void SPI_Send(uint8_t data){
	REG_SPI_TDR |= data;
  4002a8:	4a02      	ldr	r2, [pc, #8]	; (4002b4 <SPI_Send+0xc>)
  4002aa:	6813      	ldr	r3, [r2, #0]
  4002ac:	4318      	orrs	r0, r3
  4002ae:	6010      	str	r0, [r2, #0]
  4002b0:	4770      	bx	lr
  4002b2:	bf00      	nop
  4002b4:	4000800c 	.word	0x4000800c

004002b8 <__libc_init_array>:
  4002b8:	b570      	push	{r4, r5, r6, lr}
  4002ba:	4e0f      	ldr	r6, [pc, #60]	; (4002f8 <__libc_init_array+0x40>)
  4002bc:	4d0f      	ldr	r5, [pc, #60]	; (4002fc <__libc_init_array+0x44>)
  4002be:	1b76      	subs	r6, r6, r5
  4002c0:	10b6      	asrs	r6, r6, #2
  4002c2:	bf18      	it	ne
  4002c4:	2400      	movne	r4, #0
  4002c6:	d005      	beq.n	4002d4 <__libc_init_array+0x1c>
  4002c8:	3401      	adds	r4, #1
  4002ca:	f855 3b04 	ldr.w	r3, [r5], #4
  4002ce:	4798      	blx	r3
  4002d0:	42a6      	cmp	r6, r4
  4002d2:	d1f9      	bne.n	4002c8 <__libc_init_array+0x10>
  4002d4:	4e0a      	ldr	r6, [pc, #40]	; (400300 <__libc_init_array+0x48>)
  4002d6:	4d0b      	ldr	r5, [pc, #44]	; (400304 <__libc_init_array+0x4c>)
  4002d8:	1b76      	subs	r6, r6, r5
  4002da:	f000 f8a7 	bl	40042c <_init>
  4002de:	10b6      	asrs	r6, r6, #2
  4002e0:	bf18      	it	ne
  4002e2:	2400      	movne	r4, #0
  4002e4:	d006      	beq.n	4002f4 <__libc_init_array+0x3c>
  4002e6:	3401      	adds	r4, #1
  4002e8:	f855 3b04 	ldr.w	r3, [r5], #4
  4002ec:	4798      	blx	r3
  4002ee:	42a6      	cmp	r6, r4
  4002f0:	d1f9      	bne.n	4002e6 <__libc_init_array+0x2e>
  4002f2:	bd70      	pop	{r4, r5, r6, pc}
  4002f4:	bd70      	pop	{r4, r5, r6, pc}
  4002f6:	bf00      	nop
  4002f8:	00400438 	.word	0x00400438
  4002fc:	00400438 	.word	0x00400438
  400300:	00400440 	.word	0x00400440
  400304:	00400438 	.word	0x00400438

00400308 <register_fini>:
  400308:	4b02      	ldr	r3, [pc, #8]	; (400314 <register_fini+0xc>)
  40030a:	b113      	cbz	r3, 400312 <register_fini+0xa>
  40030c:	4802      	ldr	r0, [pc, #8]	; (400318 <register_fini+0x10>)
  40030e:	f000 b805 	b.w	40031c <atexit>
  400312:	4770      	bx	lr
  400314:	00000000 	.word	0x00000000
  400318:	00400329 	.word	0x00400329

0040031c <atexit>:
  40031c:	2300      	movs	r3, #0
  40031e:	4601      	mov	r1, r0
  400320:	461a      	mov	r2, r3
  400322:	4618      	mov	r0, r3
  400324:	f000 b81e 	b.w	400364 <__register_exitproc>

00400328 <__libc_fini_array>:
  400328:	b538      	push	{r3, r4, r5, lr}
  40032a:	4c0a      	ldr	r4, [pc, #40]	; (400354 <__libc_fini_array+0x2c>)
  40032c:	4d0a      	ldr	r5, [pc, #40]	; (400358 <__libc_fini_array+0x30>)
  40032e:	1b64      	subs	r4, r4, r5
  400330:	10a4      	asrs	r4, r4, #2
  400332:	d00a      	beq.n	40034a <__libc_fini_array+0x22>
  400334:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  400338:	3b01      	subs	r3, #1
  40033a:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40033e:	3c01      	subs	r4, #1
  400340:	f855 3904 	ldr.w	r3, [r5], #-4
  400344:	4798      	blx	r3
  400346:	2c00      	cmp	r4, #0
  400348:	d1f9      	bne.n	40033e <__libc_fini_array+0x16>
  40034a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40034e:	f000 b877 	b.w	400440 <_fini>
  400352:	bf00      	nop
  400354:	00400450 	.word	0x00400450
  400358:	0040044c 	.word	0x0040044c

0040035c <__retarget_lock_acquire_recursive>:
  40035c:	4770      	bx	lr
  40035e:	bf00      	nop

00400360 <__retarget_lock_release_recursive>:
  400360:	4770      	bx	lr
  400362:	bf00      	nop

00400364 <__register_exitproc>:
  400364:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400368:	4d2c      	ldr	r5, [pc, #176]	; (40041c <__register_exitproc+0xb8>)
  40036a:	4606      	mov	r6, r0
  40036c:	6828      	ldr	r0, [r5, #0]
  40036e:	4698      	mov	r8, r3
  400370:	460f      	mov	r7, r1
  400372:	4691      	mov	r9, r2
  400374:	f7ff fff2 	bl	40035c <__retarget_lock_acquire_recursive>
  400378:	4b29      	ldr	r3, [pc, #164]	; (400420 <__register_exitproc+0xbc>)
  40037a:	681c      	ldr	r4, [r3, #0]
  40037c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  400380:	2b00      	cmp	r3, #0
  400382:	d03e      	beq.n	400402 <__register_exitproc+0x9e>
  400384:	685a      	ldr	r2, [r3, #4]
  400386:	2a1f      	cmp	r2, #31
  400388:	dc1c      	bgt.n	4003c4 <__register_exitproc+0x60>
  40038a:	f102 0e01 	add.w	lr, r2, #1
  40038e:	b176      	cbz	r6, 4003ae <__register_exitproc+0x4a>
  400390:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  400394:	2401      	movs	r4, #1
  400396:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40039a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  40039e:	4094      	lsls	r4, r2
  4003a0:	4320      	orrs	r0, r4
  4003a2:	2e02      	cmp	r6, #2
  4003a4:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4003a8:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4003ac:	d023      	beq.n	4003f6 <__register_exitproc+0x92>
  4003ae:	3202      	adds	r2, #2
  4003b0:	f8c3 e004 	str.w	lr, [r3, #4]
  4003b4:	6828      	ldr	r0, [r5, #0]
  4003b6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4003ba:	f7ff ffd1 	bl	400360 <__retarget_lock_release_recursive>
  4003be:	2000      	movs	r0, #0
  4003c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4003c4:	4b17      	ldr	r3, [pc, #92]	; (400424 <__register_exitproc+0xc0>)
  4003c6:	b30b      	cbz	r3, 40040c <__register_exitproc+0xa8>
  4003c8:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4003cc:	f3af 8000 	nop.w
  4003d0:	4603      	mov	r3, r0
  4003d2:	b1d8      	cbz	r0, 40040c <__register_exitproc+0xa8>
  4003d4:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4003d8:	6002      	str	r2, [r0, #0]
  4003da:	2100      	movs	r1, #0
  4003dc:	6041      	str	r1, [r0, #4]
  4003de:	460a      	mov	r2, r1
  4003e0:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4003e4:	f04f 0e01 	mov.w	lr, #1
  4003e8:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4003ec:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4003f0:	2e00      	cmp	r6, #0
  4003f2:	d0dc      	beq.n	4003ae <__register_exitproc+0x4a>
  4003f4:	e7cc      	b.n	400390 <__register_exitproc+0x2c>
  4003f6:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4003fa:	430c      	orrs	r4, r1
  4003fc:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  400400:	e7d5      	b.n	4003ae <__register_exitproc+0x4a>
  400402:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  400406:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40040a:	e7bb      	b.n	400384 <__register_exitproc+0x20>
  40040c:	6828      	ldr	r0, [r5, #0]
  40040e:	f7ff ffa7 	bl	400360 <__retarget_lock_release_recursive>
  400412:	f04f 30ff 	mov.w	r0, #4294967295
  400416:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40041a:	bf00      	nop
  40041c:	20000428 	.word	0x20000428
  400420:	00400428 	.word	0x00400428
  400424:	00000000 	.word	0x00000000

00400428 <_global_impure_ptr>:
  400428:	20000000                                ... 

0040042c <_init>:
  40042c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40042e:	bf00      	nop
  400430:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400432:	bc08      	pop	{r3}
  400434:	469e      	mov	lr, r3
  400436:	4770      	bx	lr

00400438 <__init_array_start>:
  400438:	00400309 	.word	0x00400309

0040043c <__frame_dummy_init_array_entry>:
  40043c:	004000f1                                ..@.

00400440 <_fini>:
  400440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400442:	bf00      	nop
  400444:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400446:	bc08      	pop	{r3}
  400448:	469e      	mov	lr, r3
  40044a:	4770      	bx	lr

0040044c <__fini_array_start>:
  40044c:	004000cd 	.word	0x004000cd
